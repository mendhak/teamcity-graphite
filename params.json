{"name":"Teamcity-graphite","tagline":"","body":"\r\nTeamCity Graphite Integration\r\n===============\r\n\r\nThis TeamCity plugin will send build stats and metrics to Graphite.  You can send things such as `started`, `finished`, various code coverage stats, step durations, test metrics.  The actual metrics will vary depending on your build. This can also send FxCop and OpenCover metrics.\r\n\r\n# Install\r\n\r\nDownload the [.zip file](https://github.com/mendhak/teamcity-graphite/blob/develop/teamcity.graphite.zip?raw=true) and place it in the `<TeamCity data directory>/plugins` folder, then restart TeamCity.\r\n\r\n# Set-up\r\n\r\nChoose to add a build feature and from the dropdown, select `Send metrics to Graphite`\r\n\r\n![step1](http://code.mendhak.com/teamcity-graphite/teamcity.graphite.1.png)\r\n\r\n\r\nFill in your Graphite server values and metric specs\r\n\r\n![step2](http://code.mendhak.com/teamcity-graphite/teamcity.graphite.2.png)\r\n\r\nFor FxCop and OpenCover metrics, you will need to ensure that their resulting XML files are packaged into a resulting zip file as part of a build artifact. \r\n\r\nIf you deploy using TeamCity, then the `started` and `finished` metrics will be useful for that particular build configuration, as you can use Graphite's [`drawAsInfinite`](http://graphite.readthedocs.org/en/1.0/functions.html#graphite.render.functions.drawAsInfinite) function.  \r\n\r\nYou can choose to whitelist branch names.  Specify a set of comma separated words.  If the branch name being built contains any of those words, the metrics will be reported to Graphite, else they will be discarded.  This is useful if you only want to report on develop, master and release branches but not feature branches.\r\n\r\n# License\r\n\r\nGPL v2\r\n\r\n\r\n______________\r\n\r\n\r\n# Code setup\r\n\r\nYou will need [IntelliJ IDEA](http://www.jetbrains.com/idea/download/) as this project uses IDEA features to build artifacts.\r\n\r\nYou will also need to download and extract [TeamCity](http://www.jetbrains.com/teamcity/download/) which provides the required jars.  Be sure to download the Linux `.tar.gz` which contains the libraries.  \r\n\r\nOpen the project in Intellij IDEA, you should see a lot of unresolved references, this is normal.\r\n\r\nGo to `File | Settings | Path Variables` and set the `TeamCityDistribution` variable, pointing it to your TeamCity location.  IntelliJ will pick up the various jars and the unresolved references will resolve.\r\n\r\nTo **build** the project, click `Build | Build Artifacts...` and choose `plugin-zip`.  The .zip is generated in `/out/artifacts/plugin_zip`.\r\n\r\n\r\n# Troubleshooting\r\n\r\nIf the plugin doesn't seem to be working, you can find plugin messages in the `catalina.out` file under your TeamCity installation. (Example: `/TeamCity/logs/catalina.out`)\r\nThis usually gives you a good idea of why a call may have failed.\r\n\r\n\r\n\r\n\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}